{"version":3,"sources":["components/MatchDetailsCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamCardTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailsCard","match","teamName","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matchesPlayed","team","setTeam","useParams","useEffect","a","fetch","resp","json","matchData","getMatches","data","title","value","totalMatchCount","winCount","color","slice","map","id","process","YearSelector","years","i","push","year","MatchPage","matches","setMatches","TeamCardTile","HomePage","teams","setTeams","allTeams","getAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b247fc01.chunk.js","sourcesContent":["import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport \"./MatchDetailsCard.scss\";\n\nexport const MatchDetailsCard = ({match, teamName}) => {\n  \n  //Possible area for providing more information about the empty values\n  if(!match || !teamName) return null;\n  \n  const otherTeam = teamName === match.team1 ? match.team2 : match.team1;\n  const otherTeamRoute = `/teams/${otherTeam}`;\n  const isMatchWon = teamName === match.matchWinner;\n\n  return (\n    <div className={isMatchWon ? 'MatchDetailsCard match-won-card' : 'MatchDetailsCard match-lost-card'}>\n      <div>\n        <span className=\"vs\">vs</span><h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\n        <h2 className=\"match-date\">{match.date}</h2>\n        <h3 className=\"match-venue\">at {match.venue}</h3>\n        <h3 className=\"match-result\">{match.matchWinner} Won by {match.resultMargin} {match.result}</h3>\n      </div>\n      <div className=\"additional-details\">\n        <h3>First Innings</h3>\n        <p>{match.team1}</p>\n        <h3>Second Innings</h3>\n        <p>{match.team2}</p>\n        <h3>Man of the Match</h3>\n        <p>{match.playerOfMatch}</p>\n        <h3>Umpires</h3>\n        <p>{match.umpire1}, {match.umpire2}</p>\n      </div>\n    </div>\n  );\n}","import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './MatchSmallCard.scss';\n\nexport const MatchSmallCard = ({match, teamName}) => {\n  const otherTeam = teamName === match.team1 ? match.team2 : match.team1;\n  const otherTeamRoute = `/teams/${otherTeam}`;\n  const isMatchWon = teamName === match.matchWinner;\n\n  return (\n    <div className={isMatchWon ? 'MatchSmallCard match-won-card' : 'MatchSmallCard match-lost-card'}>\n      <span className=\"vs\">vs</span><h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\n      <p className=\"match-result\">{match.matchWinner} Won by {match.resultMargin} {match.result}</p>\n    </div>\n  );\n}","import './TeamPage.scss';\n\nimport { React, useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { MatchDetailsCard } from '../components/MatchDetailsCard';\nimport { MatchSmallCard } from '../components/MatchSmallCard';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nexport const TeamPage = () => {\n\n  const [team, setTeam] = useState({matchesPlayed:[]});\n  const { teamName } = useParams();\n\n  useEffect(\n    () => {\n      \n      const getMatches = async () => {\n        const resp = await fetch(`http://localhost:8080/team/${teamName}`);\n        const matchData = await resp.json();\n        setTeam(matchData);\n      }\n      getMatches();\n    }, [teamName]\n  );\n  \n  if(!team || !team.teamName){\n    return(\n      <h1>No data found for the team: {teamName}!</h1>\n    );\n  }\n\n  return (\n    <div className=\"TeamPage\">\n      <div className=\"team-name-section\">\n        <h1 className=\"team-name\">{team.teamName}</h1> \n      </div>\n      <div className=\"win-loss-section\">\n        Wins/Losses\n        <PieChart\n          data={[\n            { title: 'Losses', value: team.totalMatchCount - team.winCount, color: '#a34d5d' },\n            { title: 'Wins', value: team.winCount, color: '#4da375' }\n          ]}\n        />\n      </div>\n      <div className=\"match-detail-section\">\n        <h3 className=\"latest-matches\">Latest Matches</h3>\n        <MatchDetailsCard teamName = {teamName} match = {team.matchesPlayed[0]}/>\n      </div>\n      {team.matchesPlayed.slice(1).map(match => <MatchSmallCard key={match.id} teamName = {teamName} match = {match} />\n      )}\n      <div className=\"more-link\">\n        <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\n      </div>\n    </div>\n  );\n}","import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './YearSelector.scss';\n\nexport const YearSelector = ({teamName}) => {\n\n    let years = [];\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\n\n    for(let i = startYear; i <= endYear; i++){\n        years.push(i);\n    }\n\n    return (\n        <div className=\"YearSelector\">\n            <ol>\n            {years.map(year => <li key={year}><Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link></li>)}\n            </ol>\n        </div>\n    );\n}","import { React, useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { MatchDetailsCard } from '../components/MatchDetailsCard';\nimport { YearSelector } from '../components/YearSelector';\n\nimport './MatchPage.scss';\n\nexport const MatchPage = () => {\n\n  const [matches, setMatches] = useState([]);\n  const { teamName, year } = useParams();\n\n  useEffect(\n    () => {\n      const getMatches = async () => {\n        const resp = await fetch(`http://localhost:8080/team/${teamName}/matches?year=${year}`);\n        const matchData = await resp.json();\n        setMatches(matchData);\n      }\n      getMatches();\n    }, [teamName, year]\n  );\n\n  return (\n    <div className=\"MatchPage\">\n      <div className=\"year-selector\">\n        <h4 className>Select the Year</h4>\n        <YearSelector teamName = {teamName}/>\n      </div>\n      <div>\n        <div className=\"match-page-heading\">\n        <h1>Showing matches for {teamName}</h1>\n        <h3>{year}</h3>\n        </div>\n      {matches.map(match => <MatchDetailsCard key={match.id} teamName = {teamName} match = {match} />)}\n      </div>\n    </div>\n  );\n  }","import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './TeamCardTile.scss';\n\nexport const TeamCardTile = ({teamName}) => {\n\n    return(\n        <Link to={`/teams/${teamName}`}>\n            <div className=\"TeamCardTile\">\n            <h1>{teamName}</h1>\n            </div>\n        </Link>\n    );\n}","import { React, useState, useEffect } from 'react';\nimport { TeamCardTile } from '../components/TeamCardTile';\n\nimport './HomePage.scss';\n\nexport const HomePage = () => {\n\n    const [teams, setTeams] = useState([]);\n\n    useEffect(\n        () => {\n            const getAllTeams = async () => {\n                const resp = await fetch(`http://localhost:8080/teams/`); \n                const allTeams = await resp.json();\n                setTeams(allTeams);\n            };\n            getAllTeams();\n        }, []\n    );\n\n    return(\n        <div className=\"HomePage\">\n            <h1 className=\"home-page-header\">IPL Dashboard</h1>\n            <p className=\"home-page-subheader\">Select a team to get started</p>\n            <div className=\"teams-grid\">\n                {teams.map(team => <TeamCardTile key={team.id} teamName={team.teamName}/>)}\n            </div>\n        </div>\n    );\n}","import './App.scss';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage/>\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}